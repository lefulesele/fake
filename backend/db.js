const oracledb = require('oracledb');
require('dotenv').config();

const dbConfig = {
    user: 'C##ADMIN',
    password: 'Admin123',
    connectString: 'localhost:1521/FREEPDB1'
  };
  
// Oracle DB connection configuration

let pool;

const initializeDatabase = async () => {
  try {
    pool = await oracledb.createPool(dbConfig);
    console.log('✅ Oracle DB connected successfully');

    const connection = await pool.getConnection();

    // Create table if not exists (Oracle doesn't support IF NOT EXISTS directly)
    const tableExists = await connection.execute(
      `SELECT COUNT(*) AS count FROM user_tables WHERE table_name = 'LECTURER_REPORTS_COMPLETE'`
    );

    if (tableExists.rows[0][0] === 0) {
      await connection.execute(`
        CREATE TABLE lecturer_reports_complete (
          id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          username VARCHAR2(50) NOT NULL,
          user_password VARCHAR2(255) NOT NULL,
          user_email VARCHAR2(100) NOT NULL,
          user_role VARCHAR2(30) CHECK (user_role IN ('student', 'lecturer', 'principal_lecturer', 'program_leader')),
          full_name VARCHAR2(100) NOT NULL,
          department VARCHAR2(100),
          user_created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

          faculty_name VARCHAR2(100) NOT NULL,
          class_name VARCHAR2(50) NOT NULL,
          total_registered_students NUMBER DEFAULT 0,
          class_venue VARCHAR2(100),

          course_code VARCHAR2(20) NOT NULL,
          course_name VARCHAR2(100) NOT NULL,
          program_leader_name VARCHAR2(100),

          week_of_reporting VARCHAR2(20) NOT NULL,
          date_of_lecture DATE NOT NULL,
          actual_students_present NUMBER NOT NULL,
          scheduled_lecture_time VARCHAR2(20) NOT NULL,

          topic_taught CLOB NOT NULL,
          learning_outcomes CLOB NOT NULL,
          lecturer_recommendations CLOB,

          prl_feedback CLOB,
          prl_rating NUMBER CHECK (prl_rating BETWEEN 1 AND 5),
          student_rating NUMBER CHECK (student_rating BETWEEN 1 AND 5),
          student_comments CLOB,

          report_created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
      `);

      console.log('✅ Table "lecturer_reports_complete" created successfully');
    } else {
      console.log('ℹ️ Table already exists, skipping creation');
    }

    await connection.close();
  } catch (error) {
    console.error('❌ Initialization failed:', error);
    process.exit(1);
  }
};

const getPool = () => pool;

module.exports = {
  initializeDatabase,
  getPool
};
// Compare this snippet from backend/server.js: